DATABASE_URL="postgresql://johndoe:randompassword@localhost:5432/mydb?schema=public" #The database url for the database to be used. Please ensure it is migrated (the tables are created) and optionally seeded (some initial data is inserted). See the README for more information on how to do this.
PORT= "3001" #The port to run the server on (default is 3001)
ENCRYPTION_KEY="12345678901234567890123456789012" #This is a secret key used to encrypt the sensitive wallet secrets in the database. Please change this to a secure string of at least 32 characters.

#The services will run the following jobs whenever previous ones completed or after the provided time
BATCH_PAYMENT_INTERVAL="240" #delay in seconds for batching requests every 4 minutes
CHECK_COLLECTION_INTERVAL="300" #delay in seconds for checking collection every 5 minutes
CHECK_TX_INTERVAL="180" #delay in seconds for checking payment every 3 minutes
CHECK_COLLECT_REFUND_INTERVAL="300" #delay in seconds for checking collection and refund every 5 minutes
CHECK_SET_REFUND_INTERVAL="300" #delay in seconds for checking set refund every 5 minutes
CHECK_UNSET_REFUND_INTERVAL="300" #delay in seconds for checking unset refund every 5 minutes
CHECK_AUTHORIZE_REFUND_INTERVAL="300" #delay in seconds for checking authorize refund every 5 minutes
CHECK_SUBMIT_RESULT_INTERVAL="300" #delay in seconds for checking submit result every 5 minutes
CHECK_WALLET_TRANSACTION_HASH_INTERVAL="60" #delay in seconds for checking wallet transaction hash every 1 minute this also reruns potentially effected services by unlocking the wallet
REGISTER_AGENT_INTERVAL="300" #delay in seconds for registering agent every 5 minutes
DEREGISTER_AGENT_INTERVAL="300" #delay in seconds for deregistering agent every 5 minutes

#The following data is only needed for seeding
ADMIN_KEY="abcdef_this_should_be_very_secure" #The key of the admin user, this key will have all permissions, like doing payments, changing configurations and can also be used to create new (more limited) api_keys

#The following data is only needed for preprod seeding
BLOCKFROST_API_KEY_PREPROD="" #Your blockfrost api key. It is required to interact with the blockchain. Receive a free key at https://blockfrost.io/ for the network you are using (e.g. preprod)

PURCHASE_WALLET_PREPROD_MNEMONIC="" #***OPTIONAL*** The mnemonic of the wallet used to purchase any agent requests. This needs to have sufficient funds to pay, or be topped up. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
SELLING_WALLET_PREPROD_MNEMONIC="" #***OPTIONAL*** The mnemonic of the wallet used to interact with the smart contract. This only needs minimal funds, to cover the CARDANO Network fees. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
COLLECTION_WALLET_PREPROD_ADDRESS="" #***OPTIONAL*** The wallet address of the collection wallet. It will receive all payments after a successful and completed purchase (not refund). It does not need any funds, however it is strongly recommended to create it via a hardware wallet or ensure its secret is stored securely. If you do not provide an address, the SELLING_WALLET will be used.


#The following data is only needed for mainnet seeding
BLOCKFROST_API_KEY_MAINNET="" #Your blockfrost api key. It is required to interact with the blockchain. Receive a free key at https://blockfrost.io/ for the network you are using (e.g. mainnet)

#Used to configure payment and purchase wallets
PURCHASE_WALLET_MAINNET_MNEMONIC="" #***OPTIONAL*** The mnemonic of the wallet used to purchase any agent requests. This needs to have sufficient funds to pay, or be topped up. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
SELLING_WALLET_MAINNET_MNEMONIC="" #***OPTIONAL*** The mnemonic of the wallet used to interact with the smart contract. This only needs minimal funds, to cover the CARDANO Network fees. If you do not provide a mnemonic, a new one will be generated. Please ensure you export them immediately after creation and store them securely.
COLLECTION_WALLET_MAINNET_ADDRESS="" #***OPTIONAL BUT STRONGLY RECOMMENDED*** The wallet address of the collection wallet. It will receive all payments after a successful and completed purchase (not refund). It does not need any funds, however it is strongly recommended to create it via a hardware wallet or ensure its secret is stored securely. If you do not provide an address, the SELLING_WALLET will be used.

SEED_ONLY_IF_EMPTY=True #***Optionally*** Will skip seeding if there are entries in the db